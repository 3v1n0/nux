# The name of our project is "HELLO". CMakeLists files in this project can
# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and
# to the root binary directory of the project as ${HELLO_BINARY_DIR}.

if(UNIX)
#    find_package(GLIB2 REQUIRED)
#    if(GLIB2_FOUND)
#        include_directories(${GLIB2_INCLUDE_DIR})
#    endif(GLIB2_FOUND)
  
  include_directories(/usr/lib/glib-2.0/include)
  include_directories(/usr/include/glib-2.0)
endif(UNIX)

include_directories(${InalogicBuild_SOURCE_DIR}
                    ${InalogicBuild_SOURCE_DIR}/NuxCore
                    ${InalogicBuild_SOURCE_DIR}/NuxCore/Math
                    ${InalogicBuild_SOURCE_DIR}/NuxCore/Character
                    ${InalogicBuild_SOURCE_DIR}/NuxCore/FileManager
                    ${InalogicBuild_SOURCE_DIR}/NuxCore/SmartPtr
                    ${InalogicBuild_SOURCE_DIR}/NuxCore/Win32Dialogs
                    ${InalogicBuild_SOURCE_DIR}/NuxCore/TinyXML
                    ${InalogicBuild_SOURCE_DIR}/NuxImage
                    ${InalogicBuild_SOURCE_DIR}/NuxGraphics)

if(WIN32)
    set (SOURCES
        FontTexture.cpp
        FontTexture.h
        Gfx_Events.h
        Gfx_Interface.h
        Gfx_OpenGL.cpp
        Gfx_OpenGL.h
        GLDeviceFactory.cpp
        GLDeviceFactory.h
        GLDeviceFactory2.cpp
        GLDeviceFrameBufferObject.cpp
        GLDeviceFrameBufferObject.h
        GLDeviceObjects.cpp
        GLDeviceObjects.h
        GLError.cpp
        GLError.h
        GLPBuffer.cpp
        GLPBuffer.h
        GLRenderingAPI.cpp
        GLRenderStates.cpp
        GLRenderStates.h
        GLResource.cpp
        GLResource.h
        GLResourceManager.cpp
        GLResourceManager.h
        GLShader.cpp
        GLShader.h
        GLShader2.cpp
        GLShaderParameter.cpp
        GLShaderParameter.h
        GLSh_ColorPicker.cpp
        GLSh_ColorPicker.h
        GLSh_DrawFunction.cpp
        GLSh_DrawFunction.h
        GLSh_Fill.cpp
        GLSh_Fill.h
        GLTemplatePrimitiveBuffer.cpp
        GLTemplatePrimitiveBuffer.h
        GLTextureResourceManager.cpp
        GLTextureResourceManager.h
        GLTextureStates.cpp
        GLTextureStates.h
        GLThread.h
        GLTimer.cpp
        GLTimer.h
        GLVertexResourceManager.cpp
        GLVertexResourceManager.h
        GLWindowManager.cpp
        GLWindowManager.h
        IniFile.cpp
        IniFile.h
        IOpenGLAnimatedTexture.cpp
        IOpenGLAnimatedTexture.h
        IOpenGLAsmShader.cpp
        IOpenGLAsmShader.h
        IOpenGLBaseTexture.cpp
        IOpenGLBaseTexture.h
        #IOpenGLCgShader.cpp
        #IOpenGLCgShader.h
        IOpenGLCubeTexture.cpp
        IOpenGLCubeTexture.h
        IOpenGLFrameBufferObject.cpp
        IOpenGLFrameBufferObject.h
        IOpenGLGLSLShader.cpp
        IOpenGLGLSLShader.h
        IOpenGLIndexBuffer.cpp
        IOpenGLIndexBuffer.h
        IOpenGLPixelBufferOject.cpp
        IOpenGLPixelBufferOject.h
        IOpenGLQuery.cpp
        IOpenGLQuery.h
        IOpenGLRectangleTexture.cpp
        IOpenGLRectangleTexture.h
        IOpenGLResource.h
        IOpenGLSurface.cpp
        IOpenGLSurface.h
        IOpenGLTexture2D.cpp
        IOpenGLTexture2D.h
        IOpenGLVertexBuffer.cpp
        IOpenGLVertexBuffer.h
        IOpenGLVertexDeclaration.cpp
        IOpenGLVertexDeclaration.h
        IOpenGLVolume.cpp
        IOpenGLVolume.h
        IOpenGLVolumeTexture.cpp
        IOpenGLVolumeTexture.h
        OpenGLDefinitions.h
        OpenGLEngine.cpp
        OpenGLEngine.h
        UIColorTheme.cpp
        UIColorTheme.h
        VirtualKeyCodes.h
        GlobalGraphicsInitializer.cpp
        GlobalGraphicsInitializer.h
        RunTimeStats.cpp
        RunTimeStats.h
        RenderingPipe.cpp
        RenderingPipe.h
        RenderingPipeAsm.cpp
        RenderingPipeAsm.h
        RenderingPipeGLSL.cpp
        RenderingPipeGLSL.h        
    )
elseif(UNIX)
    set (SOURCES
        FontTexture.cpp
        FontTexture.h
        GfxEventsX11.h
        GfxSetupX11.cpp
        GfxSetupX11.h
        Gfx_Events.h
        Gfx_Interface.h
        GLDeviceFactory.cpp
        GLDeviceFactory.h
        GLDeviceFactory2.cpp
        GLDeviceFrameBufferObject.cpp
        GLDeviceFrameBufferObject.h
        GLDeviceObjects.cpp
        GLDeviceObjects.h
        GLError.cpp
        GLError.h
        GLPBuffer.cpp
        GLPBuffer.h
        GLRenderingAPI.cpp
        GLRenderStates.cpp
        GLRenderStates.h
        GLResource.cpp
        GLResource.h
        GLResourceManager.cpp
        GLResourceManager.h
        GLShader.cpp
        GLShader.h
        GLShader2.cpp
        GLShaderParameter.cpp
        GLShaderParameter.h
        GLSh_ColorPicker.cpp
        GLSh_ColorPicker.h
        GLSh_DrawFunction.cpp
        GLSh_DrawFunction.h
        GLSh_Fill.cpp
        GLSh_Fill.h
        GLTemplatePrimitiveBuffer.cpp
        GLTemplatePrimitiveBuffer.h
        GLTextureResourceManager.cpp
        GLTextureResourceManager.h
        GLTextureStates.cpp
        GLTextureStates.h
        GLThread.h
        GLTimer.cpp
        GLTimer.h
        GLVertexResourceManager.cpp
        GLVertexResourceManager.h
        GLWindowManager.cpp
        GLWindowManager.h
        IniFile.cpp
        IniFile.h
        IOpenGLAnimatedTexture.cpp
        IOpenGLAnimatedTexture.h
        IOpenGLAsmShader.cpp
        IOpenGLAsmShader.h        
        IOpenGLBaseTexture.cpp
        IOpenGLBaseTexture.h
        #IOpenGLCgShader.cpp
        #IOpenGLCgShader.h
        IOpenGLCubeTexture.cpp
        IOpenGLCubeTexture.h
        IOpenGLFrameBufferObject.cpp
        IOpenGLFrameBufferObject.h
        IOpenGLGLSLShader.cpp
        IOpenGLGLSLShader.h
        IOpenGLIndexBuffer.cpp
        IOpenGLIndexBuffer.h
        IOpenGLPixelBufferOject.cpp
        IOpenGLPixelBufferOject.h
        IOpenGLQuery.cpp
        IOpenGLQuery.h
        IOpenGLRectangleTexture.cpp
        IOpenGLRectangleTexture.h
        IOpenGLResource.h
        IOpenGLSurface.cpp
        IOpenGLSurface.h
        IOpenGLTexture2D.cpp
        IOpenGLTexture2D.h
        IOpenGLVertexBuffer.cpp
        IOpenGLVertexBuffer.h
        IOpenGLVertexDeclaration.cpp
        IOpenGLVertexDeclaration.h
        IOpenGLVolume.cpp
        IOpenGLVolume.h
        IOpenGLVolumeTexture.cpp
        IOpenGLVolumeTexture.h
        OpenGLDefinitions.h
        OpenGLEngine.cpp
        OpenGLEngine.h
        UIColorTheme.cpp
        UIColorTheme.h
        VirtualKeyCodesX11.h
        GlobalGraphicsInitializer.cpp
        GlobalGraphicsInitializer.h
        RunTimeStats.cpp
        RunTimeStats.h
        RenderingPipe.cpp
        RenderingPipe.h
        RenderingPipeAsm.cpp
        RenderingPipeAsm.h
        RenderingPipeGLSL.cpp
        RenderingPipeGLSL.h
    )
endif()


if(WIN32)
    add_library (NuxGraphics ${SOURCES}) 
elseif(UNIX)
    add_library (NuxGraphics ${SOURCES}) 
endif()


